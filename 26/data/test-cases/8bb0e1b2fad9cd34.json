{"uid":"8bb0e1b2fad9cd34","name":"test_total_cart_price_matches_products_total_price in chrome","fullName":"tests.test_cart#test_total_cart_price_matches_products_total_price","historyId":"cce490cca5e574c6a40dedf01f63c17d","time":{"start":1752558470290,"stop":1752558470816,"duration":526},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=132.0.6834.159); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x56542063653a <unknown>\n#1 0x565420131f00 <unknown>\n#2 0x56542013804c <unknown>\n#3 0x56542013a578 <unknown>\n#4 0x56542013a603 <unknown>\n#5 0x565420183bb4 <unknown>\n#6 0x565420182f8e <unknown>\n#7 0x5654201761cd <unknown>\n#8 0x5654201a65a2 <unknown>\n#9 0x565420175758 <unknown>\n#10 0x5654201a676e <unknown>\n#11 0x5654201c4f84 <unknown>\n#12 0x5654201a6343 <unknown>\n#13 0x56542017378a <unknown>\n#14 0x5654201749de <unknown>\n#15 0x5654206002cb <unknown>\n#16 0x565420604242 <unknown>\n#17 0x5654205ed7ac <unknown>\n#18 0x565420604df7 <unknown>\n#19 0x5654205d1b2f <unknown>\n#20 0x5654206251a8 <unknown>\n#21 0x565420625370 <unknown>\n#22 0x5654206353b6 <unknown>\n#23 0x7f0f08f2ba94 <unknown>\n#24 0x7f0f08fb8a34 __clone","statusTrace":"test_driver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"9f00eb96016111b692497b3fc14ef166\")>\nbase_url = 'https://www.demoblaze.com/'\n\n    @pytest.mark.parametrize(\"browser_name\", [\"chrome\", \"firefox\"])\n    @allure.title(\"test_total_cart_price_matches_products_total_price in {browser_name}\")\n    def test_total_cart_price_matches_products_total_price(test_driver, base_url):\n        products_page = ProductsPage(test_driver)\n        product_page = ProductPage(test_driver)\n        navbar_page = NavbarPage(test_driver)\n        cart_page = CartPage(test_driver)\n        product_to_cart_flow = ProductToCartFlow(\n            product_page=product_page, products_page=products_page\n        )\n        test_driver.get(base_url)\n        phone_test_product_name = \"Samsung galaxy s6\"\n        phone_test_product_category = \"phones\"\n        laptop_test_product_name = \"2017 Dell 15.6 Inch\"\n        laptop_test_product_category = \"laptops\"\n        monitor_test_product_name = \"Apple monitor 24\"\n        monitor_test_product_category = \"monitors\"\n    \n        # add test products to cart\n    \n        # add phone\n>       product_to_cart_flow.add_product_to_cart(\n            category_button=phone_test_product_category,\n            product_name=phone_test_product_name,\n        )\n\ntests/test_cart.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/flows/flows.py:44: in add_product_to_cart\n    self.products_page.click_product_link(product_name=product_name)\ntests/pages/products_page.py:93: in click_product_link\n    product_link.click()\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:570: in _execute\n    return self._parent.execute(command, params)\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f29847846a0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...unknown>\\\\n#22 0x5654206353b6 \\\\u003Cunknown>\\\\n#23 0x7f0f08f2ba94 \\\\u003Cunknown>\\\\n#24 0x7f0f08fb8a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=132.0.6834.159); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x56542063653a <unknown>\nE       #1 0x565420131f00 <unknown>\nE       #2 0x56542013804c <unknown>\nE       #3 0x56542013a578 <unknown>\nE       #4 0x56542013a603 <unknown>\nE       #5 0x565420183bb4 <unknown>\nE       #6 0x565420182f8e <unknown>\nE       #7 0x5654201761cd <unknown>\nE       #8 0x5654201a65a2 <unknown>\nE       #9 0x565420175758 <unknown>\nE       #10 0x5654201a676e <unknown>\nE       #11 0x5654201c4f84 <unknown>\nE       #12 0x5654201a6343 <unknown>\nE       #13 0x56542017378a <unknown>\nE       #14 0x5654201749de <unknown>\nE       #15 0x5654206002cb <unknown>\nE       #16 0x565420604242 <unknown>\nE       #17 0x5654205ed7ac <unknown>\nE       #18 0x565420604df7 <unknown>\nE       #19 0x5654205d1b2f <unknown>\nE       #20 0x5654206251a8 <unknown>\nE       #21 0x565420625370 <unknown>\nE       #22 0x5654206353b6 <unknown>\nE       #23 0x7f0f08f2ba94 <unknown>\nE       #24 0x7f0f08fb8a34 __clone\n\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:232: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1752558446944,"stop":1752558446944,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"run_on_selenium_grid","time":{"start":1752558446944,"stop":1752558446944,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"is_headless","time":{"start":1752558446944,"stop":1752558446944,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser_option","time":{"start":1752558469980,"stop":1752558469981,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"test_driver","time":{"start":1752558469981,"stop":1752558470289,"duration":308},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"test_driver::0","time":{"start":1752558470877,"stop":1752558470965,"duration":88},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_cart"},{"name":"host","value":"5725d687dde9"},{"name":"thread","value":"23-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser_name","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":6,"unknown":0,"total":9},"items":[{"uid":"1dbcd5aeb8848289","reportUrl":"https://AndreiIav.github.io/Demoblaze-Selenium-Automation/25//#testresult/1dbcd5aeb8848289","status":"passed","time":{"start":1752557288772,"stop":1752557295631,"duration":6859}},{"uid":"b195aa598fcce8ce","reportUrl":"https://AndreiIav.github.io/Demoblaze-Selenium-Automation/24//#testresult/b195aa598fcce8ce","status":"passed","time":{"start":1752319545786,"stop":1752319553524,"duration":7738}},{"uid":"26099940ee6b79e5","reportUrl":"https://AndreiIav.github.io/Demoblaze-Selenium-Automation/24//#testresult/26099940ee6b79e5","status":"passed","time":{"start":1752318723842,"stop":1752318730919,"duration":7077}},{"uid":"9f217729c5dd905a","reportUrl":"https://AndreiIav.github.io/Demoblaze-Selenium-Automation/23//#testresult/9f217729c5dd905a","status":"passed","time":{"start":1752316785848,"stop":1752316793303,"duration":7455}},{"uid":"7b741c0d90a204b6","reportUrl":"https://AndreiIav.github.io/Demoblaze-Selenium-Automation/23//#testresult/7b741c0d90a204b6","status":"broken","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=132.0.6834.159); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55ce535b453a <unknown>\n#1 0x55ce530aff00 <unknown>\n#2 0x55ce530b604c <unknown>\n#3 0x55ce530b8578 <unknown>\n#4 0x55ce530b8603 <unknown>\n#5 0x55ce53102e8b <unknown>\n#6 0x55ce53100ccd <unknown>\n#7 0x55ce530f3dcd <unknown>\n#8 0x55ce531245a2 <unknown>\n#9 0x55ce530f3758 <unknown>\n#10 0x55ce5312476e <unknown>\n#11 0x55ce53142f84 <unknown>\n#12 0x55ce53124343 <unknown>\n#13 0x55ce530f178a <unknown>\n#14 0x55ce530f29de <unknown>\n#15 0x55ce5357e2cb <unknown>\n#16 0x55ce53582242 <unknown>\n#17 0x55ce5356b7ac <unknown>\n#18 0x55ce53582df7 <unknown>\n#19 0x55ce5354fb2f <unknown>\n#20 0x55ce535a31a8 <unknown>\n#21 0x55ce535a3370 <unknown>\n#22 0x55ce535b33b6 <unknown>\n#23 0x7ff6e1918a94 <unknown>\n#24 0x7ff6e19a5a34 __clone","time":{"start":1752314524731,"stop":1752314525184,"duration":453}},{"uid":"2527d85efc2025a3","reportUrl":"https://AndreiIav.github.io/Demoblaze-Selenium-Automation/22//#testresult/2527d85efc2025a3","status":"broken","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=132.0.6834.159); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5638f7a2653a <unknown>\n#1 0x5638f7521f00 <unknown>\n#2 0x5638f752804c <unknown>\n#3 0x5638f752a578 <unknown>\n#4 0x5638f752a603 <unknown>\n#5 0x5638f75787f4 <unknown>\n#6 0x5638f757634f <unknown>\n#7 0x5638f7573f22 <unknown>\n#8 0x5638f7573135 <unknown>\n#9 0x5638f7565dcd <unknown>\n#10 0x5638f75965a2 <unknown>\n#11 0x5638f7565758 <unknown>\n#12 0x5638f759676e <unknown>\n#13 0x5638f75b4f84 <unknown>\n#14 0x5638f7596343 <unknown>\n#15 0x5638f756378a <unknown>\n#16 0x5638f75649de <unknown>\n#17 0x5638f79f02cb <unknown>\n#18 0x5638f79f4242 <unknown>\n#19 0x5638f79dd7ac <unknown>\n#20 0x5638f79f4df7 <unknown>\n#21 0x5638f79c1b2f <unknown>\n#22 0x5638f7a151a8 <unknown>\n#23 0x5638f7a15370 <unknown>\n#24 0x5638f7a253b6 <unknown>\n#25 0x7fbb9aa0ba94 <unknown>\n#26 0x7fbb9aa98a34 __clone","time":{"start":1752213132010,"stop":1752213132482,"duration":472}},{"uid":"a99c92ed9c4a5822","reportUrl":"https://AndreiIav.github.io/Demoblaze-Selenium-Automation/21//#testresult/a99c92ed9c4a5822","status":"passed","time":{"start":1752126339441,"stop":1752126346824,"duration":7383}},{"uid":"2ba756ff049f2b72","reportUrl":"https://AndreiIav.github.io/Demoblaze-Selenium-Automation/21//#testresult/2ba756ff049f2b72","status":"passed","time":{"start":1752125917024,"stop":1752125924607,"duration":7583}}]},"tags":[]},"source":"8bb0e1b2fad9cd34.json","parameterValues":["'chrome'"]}