{"uid":"22f96392e0bc9dc1","name":"test_login_valid_credentials in firefox","fullName":"tests.test_login#test_login_valid_credentials","historyId":"b7e5bbce66d04a45b22f81d0988db536","time":{"start":1752126388997,"stop":1752126400324,"duration":11327},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"test_driver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"b5761758-f04c-46ab-b470-66085a7828c1\")>\nuser_credentials = User(username='abc_12', password='abc')\nbase_url = 'https://www.demoblaze.com/'\n\n    @pytest.mark.parametrize(\"browser_name\", [\"chrome\", \"firefox\"])\n    @allure.title(\"test_login_valid_credentials in {browser_name}\")\n    def test_login_valid_credentials(test_driver, user_credentials, base_url):\n        login_page = LoginPage(test_driver)\n        navbar_page = NavbarPage(test_driver)\n        test_driver.get(base_url)\n        expected_logged_in_user_text = f\"Welcome {user_credentials.username}\"\n    \n        navbar_page.click_button(button=\"log in\")\n        login_page.get_log_in_modal()\n        login_page.login(\n            username=user_credentials.username, password=user_credentials.password\n        )\n>       logged_in_user_text = login_page.get_logged_in_user_text()\n\ntests/test_login.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/pages/login_page.py:39: in get_logged_in_user_text\n    self.get_element(locator=self.LOGGED_IN_USER)\ntests/pages/base_page.py:17: in get_element\n    element = self.wait.until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b5761758-f04c-46ab-b470-66085a7828c1\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f0f77474a60>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"is_headeless","time":{"start":1752126315327,"stop":1752126315327,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"run_on_selenium_grid","time":{"start":1752126315327,"stop":1752126315327,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"test_driver","time":{"start":1752126387675,"stop":1752126388996,"duration":1321},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser_option","time":{"start":1752126387675,"stop":1752126387675,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"user_credentials","time":{"start":1752126388996,"stop":1752126388996,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1752126388996,"stop":1752126388996,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"test_driver::0","time":{"start":1752126400368,"stop":1752126400971,"duration":603},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"host","value":"bfe4c300ba26"},{"name":"thread","value":"23-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser_name","value":"'firefox'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"a1bbb1e56ed438d1","reportUrl":"https://AndreiIav.github.io/Demoblaze-Selenium-Automation/21//#testresult/a1bbb1e56ed438d1","status":"passed","time":{"start":1752125969832,"stop":1752125971382,"duration":1550}}]},"tags":[]},"source":"22f96392e0bc9dc1.json","parameterValues":["'firefox'"]}