{"uid":"6379d2e4d538a3ab","name":"test_total_cart_price_drops_after_deleting_product in chrome","fullName":"tests.test_cart#test_total_cart_price_drops_after_deleting_product","historyId":"7911c21eca45e2937622f24271ba6c22","time":{"start":1752213139968,"stop":1752213140429,"duration":461},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=132.0.6834.159); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5652e44c953a <unknown>\n#1 0x5652e3fc4f00 <unknown>\n#2 0x5652e3fcb04c <unknown>\n#3 0x5652e3fcd578 <unknown>\n#4 0x5652e3fcd603 <unknown>\n#5 0x5652e40168a5 <unknown>\n#6 0x5652e4008d43 <unknown>\n#7 0x5652e40395a2 <unknown>\n#8 0x5652e4008758 <unknown>\n#9 0x5652e403976e <unknown>\n#10 0x5652e4057f84 <unknown>\n#11 0x5652e4039343 <unknown>\n#12 0x5652e400678a <unknown>\n#13 0x5652e40079de <unknown>\n#14 0x5652e44932cb <unknown>\n#15 0x5652e4497242 <unknown>\n#16 0x5652e44807ac <unknown>\n#17 0x5652e4497df7 <unknown>\n#18 0x5652e4464b2f <unknown>\n#19 0x5652e44b81a8 <unknown>\n#20 0x5652e44b8370 <unknown>\n#21 0x5652e44c83b6 <unknown>\n#22 0x7f4f3944ca94 <unknown>\n#23 0x7f4f394d9a34 __clone","statusTrace":"test_driver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"c8c3a278d8f3e91e6e2f5d1eeb120888\")>\nbase_url = 'https://www.demoblaze.com/'\n\n    @pytest.mark.parametrize(\"browser_name\", [\"chrome\", \"firefox\"])\n    @allure.title(\"test_total_cart_price_drops_after_deleting_product in {browser_name}\")\n    def test_total_cart_price_drops_after_deleting_product(test_driver, base_url):\n        products_page = ProductsPage(test_driver)\n        product_page = ProductPage(test_driver)\n        navbar_page = NavbarPage(test_driver)\n        cart_page = CartPage(test_driver)\n        test_driver.get(base_url)\n        product_to_cart_flow = ProductToCartFlow(\n            product_page=product_page, products_page=products_page\n        )\n        phone_test_product_name = \"Samsung galaxy s6\"\n        phone_test_product_category = \"phones\"\n        laptop_test_product_name = \"2017 Dell 15.6 Inch\"\n        laptop_test_product_category = \"laptops\"\n        monitor_test_product_name = \"Apple monitor 24\"\n        monitor_test_product_category = \"monitors\"\n    \n        # add test products to cart\n    \n        # add phone\n>       product_to_cart_flow.add_product_to_cart(\n            category_button=phone_test_product_category,\n            product_name=phone_test_product_name,\n        )\n\ntests/test_cart.py:201: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/flows/flows.py:44: in add_product_to_cart\n    self.products_page.click_product_link(product_name=product_name)\ntests/pages/products_page.py:91: in click_product_link\n    product_link.click()\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:570: in _execute\n    return self._parent.execute(command, params)\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ffa4089a530>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...unknown>\\\\n#21 0x5652e44c83b6 \\\\u003Cunknown>\\\\n#22 0x7f4f3944ca94 \\\\u003Cunknown>\\\\n#23 0x7f4f394d9a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=132.0.6834.159); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5652e44c953a <unknown>\nE       #1 0x5652e3fc4f00 <unknown>\nE       #2 0x5652e3fcb04c <unknown>\nE       #3 0x5652e3fcd578 <unknown>\nE       #4 0x5652e3fcd603 <unknown>\nE       #5 0x5652e40168a5 <unknown>\nE       #6 0x5652e4008d43 <unknown>\nE       #7 0x5652e40395a2 <unknown>\nE       #8 0x5652e4008758 <unknown>\nE       #9 0x5652e403976e <unknown>\nE       #10 0x5652e4057f84 <unknown>\nE       #11 0x5652e4039343 <unknown>\nE       #12 0x5652e400678a <unknown>\nE       #13 0x5652e40079de <unknown>\nE       #14 0x5652e44932cb <unknown>\nE       #15 0x5652e4497242 <unknown>\nE       #16 0x5652e44807ac <unknown>\nE       #17 0x5652e4497df7 <unknown>\nE       #18 0x5652e4464b2f <unknown>\nE       #19 0x5652e44b81a8 <unknown>\nE       #20 0x5652e44b8370 <unknown>\nE       #21 0x5652e44c83b6 <unknown>\nE       #22 0x7f4f3944ca94 <unknown>\nE       #23 0x7f4f394d9a34 __clone\n\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:232: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"run_on_selenium_grid","time":{"start":1752213115248,"stop":1752213115248,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"is_headeless","time":{"start":1752213115248,"stop":1752213115248,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser_option","time":{"start":1752213139664,"stop":1752213139664,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"test_driver","time":{"start":1752213139665,"stop":1752213139967,"duration":302},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1752213139967,"stop":1752213139967,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"test_driver::0","time":{"start":1752213140460,"stop":1752213140546,"duration":86},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_cart"},{"name":"host","value":"78ca8b94009a"},{"name":"thread","value":"24-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser_name","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"5f49df68d28955fc","reportUrl":"https://AndreiIav.github.io/Demoblaze-Selenium-Automation/21//#testresult/5f49df68d28955fc","status":"passed","time":{"start":1752126354265,"stop":1752126361966,"duration":7701}},{"uid":"a6a038cda4120cc4","reportUrl":"https://AndreiIav.github.io/Demoblaze-Selenium-Automation/21//#testresult/a6a038cda4120cc4","status":"passed","time":{"start":1752125933198,"stop":1752125940964,"duration":7766}}]},"tags":[]},"source":"6379d2e4d538a3ab.json","parameterValues":["'chrome'"]}