{"uid":"3a0ab21791a71826","name":"test_can_place_order_succesfully","fullName":"tests.test_cart#test_can_place_order_succesfully","historyId":"19e3e3f753476999d8d17143791f3566","time":{"start":1751951773871,"stop":1751951781211,"duration":7340},"status":"failed","statusMessage":"AssertionError: assert 'Amount: 2120 USD' == 'Amount: 1100 USD'\n  \n  - Amount: 1100 USD\n  ?          ^ -\n  + Amount: 2120 USD\n  ?         + ^","statusTrace":"test_driver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"9524f895-e4a1-4e2d-b688-1ecad1a6db3e\")>\nbase_url = 'https://www.demoblaze.com/'\n\n    def test_can_place_order_succesfully(test_driver, base_url):\n        products_page = ProductsPage(test_driver)\n        product_page = ProductPage(test_driver)\n        product_to_cart_flow = ProductToCartFlow(\n            product_page=product_page, products_page=products_page\n        )\n        navbar_page = NavbarPage(test_driver)\n        cart_page = CartPage(test_driver)\n        test_driver.get(base_url)\n    \n        phone_test_product_name = \"Iphone 6 32gb\"\n        phone_test_product_category = \"phones\"\n        laptop_test_product_name = \"MacBook Pro\"\n        laptop_test_product_category = \"laptops\"\n        monitor_test_product_name = \"ASUS Full HD\"\n        monitor_test_product_category = \"monitors\"\n        costumer_name = \"John Doe\"\n        costumer_country = \"Italy\"\n        costumer_city = \"Rome\"\n        costumer_credit_card = \"1234 brdc 9876\"\n        transaction_month = \"6\"\n        transaction_year = \"2025\"\n        expected_confirmation_message = \"Thank you for your purchase!\"\n        expected_date = cart_page.create_confirmation_prompt_expected_date()\n    \n        # add test products to cart\n    \n        # add phone\n        product_to_cart_flow.add_product_to_cart(\n            category_button=phone_test_product_category,\n            product_name=phone_test_product_name,\n        )\n    \n        # go to Home page\n        navbar_page.click_button(button=\"home\")\n    \n        # add laptop\n        product_to_cart_flow.add_product_to_cart(\n            category_button=laptop_test_product_category,\n            product_name=laptop_test_product_name,\n        )\n    \n        # go to Home page\n        navbar_page.click_button(button=\"home\")\n    \n        # add monitor\n        product_to_cart_flow.add_product_to_cart(\n            category_button=monitor_test_product_category,\n            product_name=monitor_test_product_name,\n        )\n    \n        # go to Cart page\n        navbar_page.click_button(button=\"cart\")\n    \n        # Fill Order details\n        cart_page.get_place_order_modal()\n        modal_cart_price = cart_page.get_modal_cart_price()\n        cart_page.fill_place_order_modal_fields(\n            name=costumer_name,\n            country=costumer_country,\n            city=costumer_city,\n            credit_card=costumer_credit_card,\n            month=transaction_month,\n            year=transaction_year,\n        )\n        cart_page.purchase_order()\n    \n        confirmation_message = cart_page.get_confirmation_prompt_message()\n        confirmation_prompt_data = cart_page.get_confirmation_data()\n        cart_page.click_confirmation_prompt_ok_button()\n    \n        assert confirmation_message == expected_confirmation_message\n        assert confirmation_prompt_data.order_id_numeric > 0\n>       assert (\n            confirmation_prompt_data.order_amount == f\"Amount: {int(modal_cart_price)} USD\"\n        )\nE       AssertionError: assert 'Amount: 2120 USD' == 'Amount: 1100 USD'\nE         \nE         - Amount: 1100 USD\nE         ?          ^ -\nE         + Amount: 2120 USD\nE         ?         + ^\n\ntests/test_cart.py:324: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"run_on_selenium_grid","time":{"start":1751951738386,"stop":1751951738386,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"is_headeless","time":{"start":1751951738386,"stop":1751951738386,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser_name","time":{"start":1751951738386,"stop":1751951738386,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser_option","time":{"start":1751951772461,"stop":1751951772461,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"test_driver","time":{"start":1751951772461,"stop":1751951773870,"duration":1409},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1751951773870,"stop":1751951773870,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"test_driver::0","time":{"start":1751951781262,"stop":1751951781993,"duration":731},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_cart"},{"name":"host","value":"85a5f29b42f8"},{"name":"thread","value":"26-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a0a1c0928140e256","status":"passed","time":{"start":1751951770360,"stop":1751951778785,"duration":8425}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":6},"items":[{"uid":"512336ffdea6ba8e","reportUrl":"https://AndreiIav.github.io/Demoblaze-Selenium-Automation/18//#testresult/512336ffdea6ba8e","status":"passed","time":{"start":1751867463329,"stop":1751867469248,"duration":5919}},{"uid":"c07b5823008b565d","reportUrl":"https://AndreiIav.github.io/Demoblaze-Selenium-Automation/16//#testresult/c07b5823008b565d","status":"passed","time":{"start":1751723950377,"stop":1751723956326,"duration":5949}},{"uid":"3d3fb43b459bced6","reportUrl":"https://AndreiIav.github.io/Demoblaze-Selenium-Automation/15//#testresult/3d3fb43b459bced6","status":"passed","time":{"start":1751722972371,"stop":1751722978322,"duration":5951}},{"uid":"f15bf0f5289af54","reportUrl":"https://AndreiIav.github.io/Demoblaze-Selenium-Automation/15//#testresult/f15bf0f5289af54","status":"passed","time":{"start":1751523312737,"stop":1751523319473,"duration":6736}},{"uid":"1bbdda483d8c9e9b","reportUrl":"https://AndreiIav.github.io/Demoblaze-Selenium-Automation/15//#testresult/1bbdda483d8c9e9b","status":"passed","time":{"start":1751522387330,"stop":1751522393748,"duration":6418}}]},"tags":[]},"source":"3a0ab21791a71826.json","parameterValues":[]}