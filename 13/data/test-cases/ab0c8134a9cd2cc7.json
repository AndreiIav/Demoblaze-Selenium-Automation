{"uid":"ab0c8134a9cd2cc7","name":"test_can_place_order_succesfully","fullName":"tests.test_cart#test_can_place_order_succesfully","historyId":"19e3e3f753476999d8d17143791f3566","time":{"start":1751435920483,"stop":1751435921105,"duration":622},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=132.0.6834.159); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55bfb919853a <unknown>\n#1 0x55bfb8c93f00 <unknown>\n#2 0x55bfb8c9a04c <unknown>\n#3 0x55bfb8c9c578 <unknown>\n#4 0x55bfb8c9c603 <unknown>\n#5 0x55bfb8ce6e8b <unknown>\n#6 0x55bfb8ce4ccd <unknown>\n#7 0x55bfb8cd7dcd <unknown>\n#8 0x55bfb8d085a2 <unknown>\n#9 0x55bfb8cd7758 <unknown>\n#10 0x55bfb8d0876e <unknown>\n#11 0x55bfb8d26f84 <unknown>\n#12 0x55bfb8d08343 <unknown>\n#13 0x55bfb8cd578a <unknown>\n#14 0x55bfb8cd69de <unknown>\n#15 0x55bfb91622cb <unknown>\n#16 0x55bfb9166242 <unknown>\n#17 0x55bfb914f7ac <unknown>\n#18 0x55bfb9166df7 <unknown>\n#19 0x55bfb9133b2f <unknown>\n#20 0x55bfb91871a8 <unknown>\n#21 0x55bfb9187370 <unknown>\n#22 0x55bfb91973b6 <unknown>\n#23 0x7f318423ca94 <unknown>\n#24 0x7f31842c9a34 __clone","statusTrace":"test_driver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"676b7a45029cb8475430eb6cbb17de75\")>\nbase_url = 'https://www.demoblaze.com/'\n\n    def test_can_place_order_succesfully(test_driver, base_url):\n        products_page = ProductsPage(test_driver)\n        product_page = ProductPage(test_driver)\n        product_to_cart_flow = ProductToCartFlow(\n            product_page=product_page, products_page=products_page\n        )\n        navbar_page = NavbarPage(test_driver)\n        cart_page = CartPage(test_driver)\n        test_driver.get(base_url)\n    \n        phone_test_product_name = \"Iphone 6 32gb\"\n        phone_test_product_category = \"phones\"\n        laptop_test_product_name = \"MacBook Pro\"\n        laptop_test_product_category = \"laptops\"\n        monitor_test_product_name = \"ASUS Full HD\"\n        monitor_test_product_category = \"monitors\"\n        costumer_name = \"John Doe\"\n        costumer_country = \"Italy\"\n        costumer_city = \"Rome\"\n        costumer_credit_card = \"1234 brdc 9876\"\n        transaction_month = \"6\"\n        transaction_year = \"2025\"\n        expected_confirmation_message = \"Thank you for your purchase!\"\n        expected_date = cart_page.create_confirmation_prompt_expected_date()\n    \n        # add test products to cart\n    \n        # add phone\n>       product_to_cart_flow.add_product_to_cart(\n            category_button=phone_test_product_category,\n            product_name=phone_test_product_name,\n        )\n\ntests/test_cart.py:279: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/flows/flows.py:44: in add_product_to_cart\n    self.products_page.click_product_link(product_name=product_name)\ntests/pages/products_page.py:91: in click_product_link\n    product_link.click()\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:570: in _execute\n    return self._parent.execute(command, params)\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f58b393ec20>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...unknown>\\\\n#22 0x55bfb91973b6 \\\\u003Cunknown>\\\\n#23 0x7f318423ca94 \\\\u003Cunknown>\\\\n#24 0x7f31842c9a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=132.0.6834.159); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55bfb919853a <unknown>\nE       #1 0x55bfb8c93f00 <unknown>\nE       #2 0x55bfb8c9a04c <unknown>\nE       #3 0x55bfb8c9c578 <unknown>\nE       #4 0x55bfb8c9c603 <unknown>\nE       #5 0x55bfb8ce6e8b <unknown>\nE       #6 0x55bfb8ce4ccd <unknown>\nE       #7 0x55bfb8cd7dcd <unknown>\nE       #8 0x55bfb8d085a2 <unknown>\nE       #9 0x55bfb8cd7758 <unknown>\nE       #10 0x55bfb8d0876e <unknown>\nE       #11 0x55bfb8d26f84 <unknown>\nE       #12 0x55bfb8d08343 <unknown>\nE       #13 0x55bfb8cd578a <unknown>\nE       #14 0x55bfb8cd69de <unknown>\nE       #15 0x55bfb91622cb <unknown>\nE       #16 0x55bfb9166242 <unknown>\nE       #17 0x55bfb914f7ac <unknown>\nE       #18 0x55bfb9166df7 <unknown>\nE       #19 0x55bfb9133b2f <unknown>\nE       #20 0x55bfb91871a8 <unknown>\nE       #21 0x55bfb9187370 <unknown>\nE       #22 0x55bfb91973b6 <unknown>\nE       #23 0x7f318423ca94 <unknown>\nE       #24 0x7f31842c9a34 __clone\n\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:232: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser_name","time":{"start":1751435911607,"stop":1751435911607,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"run_on_selenium_grid","time":{"start":1751435911607,"stop":1751435911607,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"is_headeless","time":{"start":1751435911607,"stop":1751435911607,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser_option","time":{"start":1751435920099,"stop":1751435920099,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"test_driver","time":{"start":1751435920099,"stop":1751435920483,"duration":384},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1751435920483,"stop":1751435920483,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"test_driver::0","time":{"start":1751435921139,"stop":1751435921247,"duration":108},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_cart"},{"name":"host","value":"0016487098ad"},{"name":"thread","value":"25-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"ab0c8134a9cd2cc7.json","parameterValues":[]}